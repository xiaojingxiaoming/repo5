			
			01
day01  
	1.项目概述
       项目背景：在互联网的影响下，互联网教育市场优势突出，越来越受欢迎。因而有了本次的开发。   
      项目架构
        技术要点：采用前后端分离的技术进行开发。由用户层，UI层，微服务层，数据层等部分组成。为PC,App，H5等客户端用户提供服务。

    2.开发流程
		需求分析-接口定义-服务端和前端并行开发-前后端集成测试。

    3.CMS   内容管理系统  不同的项目对CMS的定位不同。
	 为什么要使用CMS
		可以对各网站页面进行管理
	 使用CMS带来的好处
		对经常要变化的页面进行管理，可以快速进页面开发，完成快速上线的需求。
    4.门户  Nginx必须完成
			下载安装WebStorm并把门户的代码导入进去。下载并安装Nginx，对nginx.conf进行配置。在cmd窗口进行nginx安装的目录输入nginx.exe -s reload即可。
    5.页面的拆分  拼装渲染(了解)
			使用ssi技术进行页面拆分。
    6.基础工程  导入
			在idea中导入基础工程进行重新install即可。
	7.CMS管理页面
		使用MongoDb的原因：
			数据是json格式，灵活；CMS相对于其他数据不那么重要；
    8.连接mongodb的方式
		1.使用芒果DB自带的客户端
		2.使用神器（studio 3T）
		3.程序连接
	9.MongoDB的使用
	10.导入芒果db的数据
	11.定义接口 
		1.接口需要传递参数，比如分页参数有页码和条数，还有按照站点id，模板id参数进行查询，而传递的这些多个参数可以用对象进行封装。
		2.在封装参数对象的时候，可以使用lombok，就可以不用再去写setter和getter以及toString方法。但要使用lombok就需要在对象上加上注解@Data
		3.接口都定义在api下面方便管理，接口相当于service，重新创建一个工程对接口进行实现。
			接口专门写在API工程下面的优点：
				1.统一管理
				2.微服务工程会存在一个情况就是服务与服务之间有调用关系，我们只需要依赖核心的API就行
				3.程序灵活
	12.测试接口是否可用
		1.其中修改用到了jdk1.8的新特性：optional
			optional是一个容器对象，它的优点有以下
				1.提醒你非空判断
				2.将对象非空检测标准化
	    2.自定义Dao方法进行查询
			根据命名规范在接口中自定义方法进行查询
	13.测试芒果DB数据库中的真实数据
		在controller层写方法，service层具体实现
	14.接口文档  
		使用Swagger文档API开发工具
		1.Swagger的好处：
			1.可以生成接口文档
			2.可以直接进行测试
		2.Swagger中可以使用注解为参数添加注释说明
	15.页面查询接口测试-Postman	
		安装Postman并进行接口测试
		
			02
day02
	1.vue的介绍和简单运用
	2.webpack的介绍
		1.主要作用：前端资源的打包工具
			缺点：
				1.配置有些繁琐
				2.文档不丰富
			运行依赖于node.js
		2.安装
			1.不指定版本安装
			2.指定版本安装		
	3.webpack入门程序

	4. webpack-dev-server的安装与测试
		它可以用来实现热加载，并且自动刷新浏览器。
	5.导入CMS的工程到webstorm中
	6.调用接口在前端页面进行测试
	7.CmcPage页面列表数据前后端测试
	8.实现分页控件的查询
			
			03
day03	
	1.自定义条件查询
	2.页面的增加，修改，删除
		其中的两个技术点：
		1.给路由绑定值（参数）
		2.从路由地址中的参数取出并在页面显示		
	3.异常信息处理
		1.在项目中可能会出现异常，在本项目中异常信息进行统一抛出统一捕获，因此定义在公共的工程里面。
		2.异常有两种，一种是可预知的，如对象可能查询不到，一种是不可预知的，如框架或者第三方组件出现的异常。	
			04
day04		
	1.网页静态化技术
		基于cms对页面进行管理，对那些由于经营需要快速上线的功能页面进行管理，而采用的一种静态化页面管理技术，叫做freemarker
		freemarker：它是一种模板引擎，基于模板+数据，输出文本（html文件，json文件，java文件）	
	2.静态化程序主要分为四步
		1.获取页面DataUrl
		2.远程请求，获取数据模型
			使用resTemplate进行实现的
		3.获取页面模板（GridFS：MongoDB的分布式文件系统）
			GridFS对模板的管理总共分为两个部分
				1.模板信息存在cms_template集合中
				2.模板内容又分为两个部分进行存储
					1.将二进制数据存储在fs.chunks中
					2.将文件块名称，大小，时间存在fs.files里面
		4.页面静态化
	
			
			
		

























		
			
			
			
			
			
			
			
			
			